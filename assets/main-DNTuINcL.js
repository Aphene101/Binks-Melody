import{k as m,l as g,m as y,b as i,h as u,d as h,g as f,n as w,o as p,q as v,i as L,a as E,w as b,j as q}from"./firebase-BcYGz8gK.js";const C=m(),P=g(C);function S(e){switch(e.code||e.message){case"auth/invalid-email":return"Please enter a valid email address.";case"auth/user-not-found":return"No account found with this email or username.";case"auth/invalid-credential":return"Email / Password is incorrect.";case"auth/user-disabled":return"This account has been disabled.";case"auth/email-not-verified":return"Please verify your email before logging in.";case"auth/too-many-requests":return"Too many failed attempts. Please try again later.";default:return e.message||"Something went wrong. Please try again."}}async function x(e){if(e.includes("@"))return e;const t=h(P,"usernames",e),a=await f(t);if(a.exists())return a.data().email;throw new Error("Username not found")}document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector("#login-email"),t=document.querySelector("#login-password"),a=document.querySelector("#login-button"),s=document.querySelector("#login-error");a.addEventListener("click",async()=>{const o=e.value.trim(),d=t.value;if(!o||!d){s.textContent="Please enter both fields.";return}try{const r=await x(o);if(!(await y(i,r,d)).user.emailVerified)throw await u(i),{code:"auth/email-not-verified"};s.textContent="",window.location.href="./home.html"}catch(r){console.error("Login error:",r);const n=S(r);s.textContent=n}})});document.addEventListener("DOMContentLoaded",function(){const e=document.querySelector(".guest"),t=document.querySelector(".sidebar"),a=document.getElementById("newPlaylistBtn"),s=document.querySelector(".add-playlist"),o=document.createElement("div"),d=document.getElementById("createPlaylistBtn"),r=document.getElementById("playlistNameInput");o.className="overlay",document.body.appendChild(o),e?.addEventListener("click",function(){t.classList.toggle("show"),o.classList.toggle("active"),document.body.style.overflow=t.classList.contains("show")?"hidden":"auto"}),o.addEventListener("click",function(){const n=t?.classList.contains("show"),c=s?.classList.contains("show");n&&t.classList.remove("show"),c&&s.classList.remove("show"),(n||c)&&(o.classList.remove("active"),document.body.style.overflow="auto")}),a?.addEventListener("click",()=>{s.classList.add("show"),o.classList.add("active"),document.body.style.overflow="hidden"}),t?.addEventListener("click",n=>n.stopPropagation()),s?.addEventListener("click",n=>n.stopPropagation()),d.addEventListener("click",async()=>{const n=r.value.trim();if(!n)return;const c=i.currentUser?.uid;if(console.log("auth.currentUser:",i?.currentUser),!c){alert("You need to be logged in to create a playlist.");return}await w(c,n),s.classList.remove("show"),r.value="",location.reload()})});const l=document.querySelector(".guest p");p(i,async e=>{if(l.textContent="Guest",e)try{const t=v(L(E,"usernames"),b("userId","==",e.uid)),a=await q(t);if(a.empty)console.warn("No username found for user UID:",e.uid),l.textContent="Guest";else{const o=a.docs[0].id;l.textContent=o}}catch(t){console.error("Error fetching username:",t),l.textContent="Guest"}else l.textContent="Guest",console.log("No user is logged in.")});document.querySelector(".logout").addEventListener("click",async()=>{try{await u(i),document.querySelector(".guest p").textContent="Guest"}catch(e){console.error("Error signing out:",e)}});
